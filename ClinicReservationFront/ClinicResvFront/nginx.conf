resolver 8.8.8.8;  # Use a DNS server for dynamic resolution

server {
    listen 80;
    sendfile on;
    default_type application/octet-stream;

    gzip on;
    gzip_http_version 1.1;
    gzip_disable "MSIE [1-6].";
    gzip_min_length 256;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_comp_level 9;

    root /usr/share/nginx/html;
    location / {
        try_files $uri $uri/ /index.html =404;
    }

    location /api {
        set $backend_url '';  # Initialize the variable
        resolver_timeout 5s;  # Set a timeout for DNS resolution

        rewrite_by_lua_block {
            local backend_env = os.getenv("BACKEND_URL")
            if backend_env then
                ngx.var.backend_url = backend_env
            else
                ngx.log(ngx.ERR, "BACKEND_URL environment variable is not set")
                return ngx.exit(500)
            end
        }

        proxy_pass $backend_url;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
